<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Wowing.github.io</id>
    <title>Miku酱的Blog</title>
    <updated>2020-04-05T11:31:25.407Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Wowing.github.io"/>
    <link rel="self" href="https://Wowing.github.io/atom.xml"/>
    <subtitle>为美好的世界献上祝福！</subtitle>
    <logo>https://Wowing.github.io/images/avatar.png</logo>
    <icon>https://Wowing.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Miku酱的Blog</rights>
    <entry>
        <title type="html"><![CDATA[我tm就是一个智障！！！]]></title>
        <id>https://Wowing.github.io/post/wo-tm-jiu-shi-yi-ge-zhi-zhang/</id>
        <link href="https://Wowing.github.io/post/wo-tm-jiu-shi-yi-ge-zhi-zhang/">
        </link>
        <updated>2020-04-05T11:23:44.000Z</updated>
        <content type="html"><![CDATA[<p>我tm就是一个智障！！！</p>
<p>欢迎各位来D我！！！！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 AT3875 【[ARC089A] Traveling】]]></title>
        <id>https://Wowing.github.io/post/ti-jie-at3875-arc089a-traveling/</id>
        <link href="https://Wowing.github.io/post/ti-jie-at3875-arc089a-traveling/">
        </link>
        <updated>2020-04-05T11:22:16.000Z</updated>
        <content type="html"><![CDATA[<p>有生之年居然能够入门题WA，果然我太菜了qwq</p>
<p>好，进入正题：</p>
<p>一开始我看到这样的题目，第一反应就是万能的dfs！</p>
<p>思路：搜索路线，由于求最短时间所以可以直接剪枝向左和向上。而求出最短时间比较即可。</p>
<p>代码分数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="red"><mn>0</mn></mstyle></mrow><annotation encoding="application/x-tex">\color{red}{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord" style="color:red;"><span class="mord" style="color:red;">0</span></span></span></span></span></p>
<p>代码：</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
int n,m,a[41][101],t,fl;
int flag=0;
//bool f[41][41];
int minn=1e9;
void dfs(int x,int y,int sum)//dfs
{
    if(x&lt;1||x&gt;n||y&lt;1||y&gt;m) return;
    if(x==n&amp;&amp;y==m) minn=min(minn,sum);
    dfs(x+1,y,sum+1);
    dfs(x,y+1,sum+1);
}
int main()
{
	//ios::sync_with_stdio(false);
	int i,j;
	cin&gt;&gt;t;
    while(t--)
    {
        minn=1e9;
        cin&gt;&gt;fl&gt;&gt;n&gt;&gt;m;
        dfs(1,1,0);
        if(minn&gt;fl||minn==0) flag=1;
        //cout&lt;&lt;minn&lt;&lt;&quot; &quot;&lt;&lt;flag&lt;&lt;endl;
        //else cout&lt;&lt;&quot;No&quot;;
        //cout&lt;&lt;endl;
    }
    if(flag) cout&lt;&lt;&quot;No&quot;;
    else cout&lt;&lt;&quot;Yes&quot;;
	//dfs(1,1,a[1][1]);
	//cout&lt;&lt;maxx;
    //system(&quot;pause&quot;);
	return 0;
}
</code></pre>
<p>反思原因：求的是时间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>时能否<strong>到达</strong>，而不是在时间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>之前能否到达。</p>
<p>所以让我们再回过头来看看这道题，可以明显地发现其实所需时间就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>+<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>嘛！等等，还没完：时间大小判断了，那怎么知道<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>的时候到底能不能到达目的地呢？</p>
<p>经过模拟，可以清楚地发现：如果你要在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>时间到达的话，最短时间到目的地后，可以<strong>不停地往回走一格再走回来，往回走一格再走回来......</strong></p>
<p>所以，可以发现，只要剩余的时间mod<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>余数为0的时候，结果就一定能够到达！</p>
<p>代码：</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
int n,m,t,fl;
int flag=0;
//bool f[41][41];
int minn=1e9;
void dfs(int x,int y,int sum)
{
    if(sum&gt;minn) return;
    if(x&lt;1||x&gt;n||y&lt;1||y&gt;m) return;
    if(x==n&amp;&amp;y==m) minn=min(minn,sum);
    dfs(x+1,y,sum+1);
    dfs(x,y+1,sum+1);
}
int main()
{
	//ios::sync_with_stdio(false);
	int i,j;
	cin&gt;&gt;t;
    while(t--)
    {
        cin&gt;&gt;fl&gt;&gt;n&gt;&gt;m;
        if(n+m&gt;fl) //时间太短，原地升天
        {
            flag=1;
            break;
        }
        if((fl-n-m)%2==1) //走了不回，原地升天
        {
            flag=1;
            break;//只要不行，直接走也
        }
    }
    if(flag) cout&lt;&lt;&quot;No&quot;;
    else cout&lt;&lt;&quot;Yes&quot;;
	//dfs(1,1,a[1][1]);
	//cout&lt;&lt;maxx;
    //system(&quot;pause&quot;);
	retun 0; //防止抄袭，抵抗之间
}
</code></pre>
<p>完结撒花~</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[My Mind touhou]]></title>
        <id>https://Wowing.github.io/post/my-mind-touhou/</id>
        <link href="https://Wowing.github.io/post/my-mind-touhou/">
        </link>
        <updated>2020-03-12T09:17:30.000Z</updated>
        <content type="html"><![CDATA[<h1 id="东方歌曲qwq">东方歌曲qwq</h1>
<h3 id="ノ字曲">ノ字曲</h3>
<p>大小姐《滲色血界 狂月ノ獄》</p>
<p>二小姐《緋色月下 狂咲ノ絶》</p>
<p>uuz《死奏怜音 玲珑ノ终》</p>
<p>早苗《风导星歌、黎明ノ景》</p>
<p>幽香《幽音絶花、缭乱ノ彩》</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 CF441A 【Valera and Antique Items】]]></title>
        <id>https://Wowing.github.io/post/ti-jie-cf441a-valera-and-antique-items/</id>
        <link href="https://Wowing.github.io/post/ti-jie-cf441a-valera-and-antique-items/">
        </link>
        <updated>2020-03-05T04:35:18.000Z</updated>
        <content type="html"><![CDATA[<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">RE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>了好久，结果发现是<code>system(&quot;pause&quot;);</code>的错误。</p>
<p>首先，看到这道题目，可能很多萌新和我一样是一脸茫然的。“这不是背包/动规吗？怎么成入门题了呢？”</p>
<p>先别急，仔细看题目后，我们可以把题目概括成这样：</p>
<p>有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>组数，第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>个组数有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">ki</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">i</span></span></span></span>个数字。只要你的数字高于第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>个数，这一组数字就属于你了。问你能得到几组数字？分别是第几组？</p>
<p>这样就简单很多了吧......</p>
<p>只要这个数组的数有一个小于你的数，就可以把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">ai</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span></span></span></span>标记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。最后输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span></span></span></span>即可。</p>
<p>上代码：</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
int n,an,x,nx,ans;
int a[51];
int main()
{
    cin&gt;&gt;n&gt;&gt;an;
    for(int i=1;i&lt;=n;i++)
    {
        cin&gt;&gt;nx;//输入个数
        for(int j=1;j&lt;=nx;j++)
        {
            cin&gt;&gt;x;
            if(x&lt;an) a[i]=1;//桶排序
        }
        if(a[i]==1) ans++;//如果有的话，ans++
    }
    cout&lt;&lt;ans&lt;&lt;endl;
    for(int i=1;i&lt;=n;i++) if(a[i]==1) cout&lt;&lt;i&lt;&lt;&quot; &quot;;
    //system(&quot;pause&quot;);
    return 0;
}
</code></pre>
<p>值得一提的是：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span></span></span></span>是<strong>你得到的数组数量</strong>，而不是你能得到的数字的数量。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 AT3881 【[ARC090A] Candies】]]></title>
        <id>https://Wowing.github.io/post/ti-jie-at3881-arc090a-candies/</id>
        <link href="https://Wowing.github.io/post/ti-jie-at3881-arc090a-candies/">
        </link>
        <updated>2020-03-05T02:09:39.000Z</updated>
        <content type="html"><![CDATA[<p>看到dalao们都用DP写这道题，萌新不得不弱弱地发声：“这难道不是一道DFS题吗？”</p>
<p>实际上，我认为这道题目就是赤裸裸的深度优先搜索！唯一要注意的是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>的时候的特判。</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">code</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span></span></span></span>:</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
int n,m,a[41][101];
//bool f[41][41];
int maxx;
void dfs(int x,int y,int sum)
{
    if(x&lt;1||x&gt;2||y&lt;1||y&gt;n) return;
    if(x==2&amp;&amp;y==n) maxx=max(maxx,sum);//maxx取最大值
    if(x&lt;2) dfs(x+1,y,sum+a[x+1][y]);//搜索
    dfs(x,y+1,sum+a[x][y+1]);
}
int main()
{
	//ios::sync_with_stdio(false);
	int i,j;
	cin&gt;&gt;n;
	for(i=1;i&lt;=2;i++)
	{
		for(j=1;j&lt;=n;j++)
		{
			cin&gt;&gt;a[i][j];
		}
	}
	dfs(1,1,a[1][1]);
	cout&lt;&lt;maxx;//输出
    //system(&quot;pause&quot;);
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 AT3919 【[ABC088B] Card Game for Two】]]></title>
        <id>https://Wowing.github.io/post/ti-jie-at3919-abc088b-card-game-for-two/</id>
        <link href="https://Wowing.github.io/post/ti-jie-at3919-abc088b-card-game-for-two/">
        </link>
        <updated>2020-03-05T02:08:50.000Z</updated>
        <content type="html"><![CDATA[<p>萌新的奇怪思路：</p>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> mod 2=0:每一次都用奇数项减去偶数项，再加入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span></span></span></span>。</p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> mod 2=1:由于最后一张卡牌肯定是先手的，所以直接把最后一个数加入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span></span></span></span>，然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</p>
</li>
</ul>
<p>代码：</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
int a[101],n,ans;
int cmp(int a,int b)
{
    return a&gt;b;
}
int main()
{
    cin&gt;&gt;n;
    for(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];
    sort(a+1,a+1+n,cmp);
    if(n%2==1)//直接判断
    {
        n-=1;
        ans+=a[n+1];
    }
    for(int i=1;i&lt;=n;i+=2)//两个一起
    {
        ans+=a[i]-a[i+1];
    }
    cout&lt;&lt;ans;
    //system(&quot;pause&quot;);
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[对于我来说，如何更快地A掉题目]]></title>
        <id>https://Wowing.github.io/post/dui-yu-wo-lai-shuo-ru-he-geng-kuai-di-a-diao-ti-mu/</id>
        <link href="https://Wowing.github.io/post/dui-yu-wo-lai-shuo-ru-he-geng-kuai-di-a-diao-ti-mu/">
        </link>
        <updated>2020-03-05T02:08:04.000Z</updated>
        <content type="html"><![CDATA[<h1 id="对于我来说如何更快地骗分a掉题目">对于我来说，如何更快地<s>骗分</s>A掉题目</h1>
<p>这是关于一个蒟蒻的经验，请各位多多指教！</p>
<h2 id="1说明">1.说明</h2>
<p>大部分题目都有说明。这里以<a href="https://wzoi.cc/s/1/2464">小X分砖块</a>为例。在提示（说明）中可以看见这样的说明：</p>
<ul>
<li>对于 30%的数据，N=1。</li>
<li>对于 60%的数据，所有 Ki均相等。</li>
<li>对于 100%的数据， 1≤N≤100000， 1≤Ki≤1000000000， 砖的总块数不超过 1000000000。</li>
</ul>
<p>然后，我惊讶地发现：我不会写这道题。于是，说明就有用了！</p>
<ul>
<li>对于 30%的数据，N=1。<br>
在N=1的情况下，说明只有一段，那么就特判输出砖块总数量就可以了。</li>
</ul>
<p>代码如下：</p>
<pre><code class="language-cpp">	if(n==1)
    {
    	int ttt;
        cin&gt;&gt;ans&gt;&gt;ttt;
        printf(&quot;%d&quot;,ans);
        return 0;
    }
    
</code></pre>
<p>然后，就这样，轻松得了30分。<br>
<a href="https://wzoi.cc/solutions/964078">地址</a></p>
<p>虽然没有满分，但是30分总比0分好吧......</p>
<p>总之，数据是个好东西！</p>
<h2 id="2你谷评论区">2.你谷评论区</h2>
<p>在你谷评论区，总能找到一些神奇的东西。如<a href="https://www.luogu.org/problemnew/show/P1547">P1547 Out of Hay</a></p>
<p>在一开始写这题的时候，只是直接用最小生成树的。然而，在习惯性地点开评论区后.......</p>
<figure data-type="image" tabindex="1"><img src="https://cdn.luogu.com.cn/upload/pic/56159.png" alt="RT" loading="lazy"></figure>
<p>然后就把P1111加上了这位dalao的判断，然后完美AC！؏؏☝ᖗ乛◡乛ᖘ☝؏؏</p>
<p><a href="https://www.luogu.org/recordnew/show/17960629">地址</a></p>
<p>总之，评论区会有惊喜！（当然，有直接代码也不能抄哦！）</p>
<h2 id="3打表">3.打表</h2>
<p>这个就不用说了吧.......</p>
<p><a href="https://www.luogu.org/problemnew/show/CF409F">CF409F 000001</a>，自己体会。</p>
<h2 id="小结">小结</h2>
<p>打表加暴力，</p>
<p>骗分过样例。</p>
<p>暴力出奇迹，</p>
<p>打表出省一。</p>
<p>第一次写文章写得不好请多关照！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[哦，我们可爱的C++]]></title>
        <id>https://Wowing.github.io/post/e-wo-men-ke-ai-de/</id>
        <link href="https://Wowing.github.io/post/e-wo-men-ke-ai-de/">
        </link>
        <updated>2020-03-05T01:59:41.000Z</updated>
        <content type="html"><![CDATA[<p>苗条的双腿和协调的五官，被许多人称做「IT界首屈一指的美女」的她，也因为拥有插花、茶道、钢琴、小提琴、柔道、剑道、合气道等等才能而出名。</p>
<p>她的粉丝大多很狂热，还存在着「暗之军团」这样的粉丝俱乐部。「暗之军团」是规模仅次于共济会（Freemason）的巨型团体，一般人无法入会。据说如果能回答出对她非常狂热的问题，就会有查觉到的军团成员来询问「你愿意加入暗之军团吗？」</p>
<p>与她同父异母的姊妹Objective-C一心专注于弹钢琴，他的专注被IT界的天才斯蒂芬‧贾伯斯（也被一部分人称为紫色蔷薇）相中，而一跃成为明星。（Objective-C是Apple OS X与iOS的主要开发程序语言。维基百科）</p>
<p>而C++则是由于其美貌和才能被人关注，长年稳坐业界明星的宝座。姊妹二人真可谓是对比鲜明。</p>
<figure data-type="image" tabindex="1"><img src="https://Wowing.github.io/post-images/1583373639532.png" alt="" loading="lazy"></figure>
<p>她根据心情不同，频繁地变换发型和服装这一点也很出名：昨天还是和服配黑发、今天却以红发歌德系登场之类的。因为她的变身而使轻度粉丝惊奇地说「啊？这是今天的C++小姐吗？」的事情也常常发生。远离业界时私下经常穿HYSTERIC GLAMOUR的服装。</p>
<p>关于她的出身年月日，其事务所并不公开。虽然也有出身于1983年一说，但是本文采用的是在一部份粉丝中流传甚广的1985年10月14日的说法。访间也流传有「她自己或许也不记得自己的生日…」这样诧有其事的传言。与其说「C++小姐的话，记不得自己的生日也不是什么不可思议的事情」，倒不如把这看作是她天真烂漫的表现。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[大事祭]]></title>
        <id>https://Wowing.github.io/post/da-shi-ji/</id>
        <link href="https://Wowing.github.io/post/da-shi-ji/">
        </link>
        <updated>2020-03-04T09:55:52.000Z</updated>
        <content type="html"><![CDATA[<p>2018-03-24 10:13</p>
<p>欢迎注册洛谷。希望洛谷可以给你带来进步。如果有任何疑问可以查看帮助，也可以直接在讨论区发帖。祝你在洛谷coding愉快！</p>
<p>2018-04-07 13:05</p>
<p>成为了小小牛。以后还要继续努力!</p>
<p>2018-07-18 21:58</p>
<p>成为了小小犇。以后还要继续努力!</p>
<p>2018-08-17 08:36</p>
<p>成为了小牛。以后还要继续努力!</p>
<p>2018-09-17 19:32</p>
<p>成为了小犇。以后还要继续努力!</p>
<p>2018-12-31 11:55</p>
<p>成为了中牛。以后还要继续努力!</p>
<p>2019-01-28 11:08</p>
<p>成为了中犇。以后还要继续努力!</p>
<p>2019-01-31 10:11:51</p>
<p>提交200祭（QAQ）</p>
<p>2019-02-15 12:35:14</p>
<h4 id="绿名祭">绿名祭</h4>
<p>2019-03-03 18:44:24</p>
<p>AC70祭</p>
<p>2019-03-06 20:38:41</p>
<h4 id="又掉蓝2333祭">又掉蓝2333祭</h4>
<p>2019-03-08 18:03</p>
<p>成为了大牛。以后还要继续努力!</p>
<p>2019-03-12 19:57:09</p>
<p>AC80祭（QAQ我真是个蒟蒻）</p>
<p>2019-03-31 20:26:11</p>
<p>愚人节比赛爆0祭</p>
<p>AC95祭</p>
<p>2019-04-14 19:28:05</p>
<p>终于，AC100祭！（果然是个蒟蒻）</p>
<p>2019-04-16 19:02:59</p>
<h4 id="我橙名了橙名祭莫名其妙地橙名了">我！！！！！！橙名了！！！！！！！橙名祭！（莫名其妙地橙名了）</h4>
<p>2019-04-30 16:40:04</p>
<h4 id="莫名其妙又蓝了蓝名祭">莫名其妙又蓝了？？？蓝名祭</h4>
<p>2019-06-22 14:34</p>
<p>成为了大犇。以后还要继续努力!</p>
<p>2019-07-09 21:14:11</p>
<p>通过11^2题祭</p>
<p>2019-07-17 16:18:17</p>
<h4 id="wtf绿名祭">WTF绿名祭</h4>
<p>2019-08-14 20:40:47</p>
<h4 id="蓝了蓝名祭一秒钟前还是绿的">蓝了？？？蓝名祭？？？一秒钟前还是绿的</h4>
<p>2020-2-6 10:34:51</p>
<h4 id="人生中的第一道黑题-这里">人生中的第一道黑题！ <a href="https://www.luogu.com.cn/record/30189379">这里！</a></h4>
<p>2020-03-04 16:54:07</p>
<p>题解5篇祭</p>
<p>2020-03-09 00:00:00</p>
<h4 id="理所当然的绿名祭">理所当然的绿名祭</h4>
<p>2020-04-05 18:57:29</p>
<p>AC200祭+提交600祭，wtcl</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[个人简介]]></title>
        <id>https://Wowing.github.io/post/ge-ren-jian-jie/</id>
        <link href="https://Wowing.github.io/post/ge-ren-jian-jie/">
        </link>
        <updated>2020-03-04T09:54:26.000Z</updated>
        <content type="html"><![CDATA[<h1 id="我是miku酱">我是Miku酱</h1>
<p>什么都不会/kk</p>
<h1 id="color66ccffmy-blog"><a href="https://wowing.github.io/"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="#66CCFF"><mrow><mi>M</mi><mi>y</mi><mi>B</mi><mi>l</mi><mi>o</mi><mi>g</mi></mrow></mstyle></mrow><annotation encoding="application/x-tex">\color{#66CCFF}{My Blog}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord" style="color:#66CCFF;"><span class="mord mathdefault" style="margin-right:0.10903em;color:#66CCFF;">M</span><span class="mord mathdefault" style="margin-right:0.03588em;color:#66CCFF;">y</span><span class="mord mathdefault" style="margin-right:0.05017em;color:#66CCFF;">B</span><span class="mord mathdefault" style="margin-right:0.01968em;color:#66CCFF;">l</span><span class="mord mathdefault" style="color:#66CCFF;">o</span><span class="mord mathdefault" style="margin-right:0.03588em;color:#66CCFF;">g</span></span></span></span></span></a></h1>
<h2 id="colorred大事祭"><a href="https://93263.blog.luogu.org/tai-shi-ji"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="Red"><mrow><mi mathvariant="normal">大</mi><mi mathvariant="normal">事</mi><mi mathvariant="normal">祭</mi></mrow></mstyle></mrow><annotation encoding="application/x-tex">\color{Red}{大事祭}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord" style="color:Red;"><span class="mord cjk_fallback" style="color:Red;">大</span><span class="mord cjk_fallback" style="color:Red;">事</span><span class="mord cjk_fallback" style="color:Red;">祭</span></span></span></span></span></a></h2>
<h3 id="color347723我-号-没-了"><a href="https://www.luogu.com.cn/paste/5eozuowa"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="#347723"><mrow><mi mathvariant="normal">我</mi><mi mathvariant="normal">号</mi><mi mathvariant="normal">没</mi><mi mathvariant="normal">了</mi></mrow></mstyle></mrow><annotation encoding="application/x-tex">\color{347723}{我 号 没 了}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord" style="color:#347723;"><span class="mord cjk_fallback" style="color:#347723;">我</span><span class="mord cjk_fallback" style="color:#347723;">号</span><span class="mord cjk_fallback" style="color:#347723;">没</span><span class="mord cjk_fallback" style="color:#347723;">了</span></span></span></span></span></a></h3>
<h4 id="colororangeiloveorangejuice"><a href="steam://rungameid/282800"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="Orange"><mrow><mi>I</mi><mi>L</mi><mi>O</mi><mi>V</mi><mi>E</mi><mi>O</mi><mi>R</mi><mi>A</mi><mi>N</mi><mi>G</mi><mi>E</mi><mi>J</mi><mi>U</mi><mi>I</mi><mi>C</mi><mi>E</mi></mrow></mstyle></mrow><annotation encoding="application/x-tex">\color{Orange}{ILOVEORANGEJUICE}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord" style="color:Orange;"><span class="mord mathdefault" style="margin-right:0.07847em;color:Orange;">I</span><span class="mord mathdefault" style="color:Orange;">L</span><span class="mord mathdefault" style="margin-right:0.02778em;color:Orange;">O</span><span class="mord mathdefault" style="margin-right:0.22222em;color:Orange;">V</span><span class="mord mathdefault" style="margin-right:0.05764em;color:Orange;">E</span><span class="mord mathdefault" style="margin-right:0.02778em;color:Orange;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;color:Orange;">R</span><span class="mord mathdefault" style="color:Orange;">A</span><span class="mord mathdefault" style="margin-right:0.10903em;color:Orange;">N</span><span class="mord mathdefault" style="color:Orange;">G</span><span class="mord mathdefault" style="margin-right:0.05764em;color:Orange;">E</span><span class="mord mathdefault" style="margin-right:0.09618em;color:Orange;">J</span><span class="mord mathdefault" style="margin-right:0.10903em;color:Orange;">U</span><span class="mord mathdefault" style="margin-right:0.07847em;color:Orange;">I</span><span class="mord mathdefault" style="margin-right:0.07153em;color:Orange;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;color:Orange;">E</span></span></span></span></span></a></h4>
<h2 id="colorpink友链"><a href="https://93263.blog.luogu.org/you-lian-qwq"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="Pink"><mrow><mi mathvariant="normal">友</mi><mi mathvariant="normal">链</mi></mrow></mstyle></mrow><annotation encoding="application/x-tex">\color{Pink}{友链}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord" style="color:Pink;"><span class="mord cjk_fallback" style="color:Pink;">友</span><span class="mord cjk_fallback" style="color:Pink;">链</span></span></span></span></span></a></h2>
<h1 id="zj沙雕王-对线她最强">ZJ沙雕王 对线她最强</h1>
<h1 id="她是miku酱-暴躁的女生">她是Miku酱 暴躁的女生</h1>
<h2 id="诗作者某文化课同学">诗作者：某文化课同学</h2>
]]></content>
    </entry>
</feed>